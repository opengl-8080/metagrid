ext {
    libName = 'metagrid'
    libVersion = '1.0.0'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    repositories {
        mavenCentral()
    }

    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    configurations {
        provided
        provided.extendsFrom(compile)
    }
     
    sourceSets {
        main.compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
        test.runtimeClasspath += configurations.provided
    }

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.13'
        testCompile 'junit:junit:4.12', {transitive = false}
        testCompile 'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1'
        testCompile 'org.assertj:assertj-core:2.3.0'
        testCompile 'org.jmockit:jmockit:1.21'
    }

    eclipse.classpath {
        plusConfigurations += [configurations.provided]
        noExportConfigurations += [configurations.provided]

        file.whenMerged { cp ->
            def container = cp.entries.find { it.path.contains('JRE_CONTAINER') }
            container.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/jdk7"

            def jmockit = cp.entries.findAll { it.path =~ /jmockit.*/}
            def others = cp.entries.findAll { !(it.path =~ /jmockit.*/) }

            cp.entries = jmockit + others
        }
    }

    jar {
        baseName = libName
        version = libVersion
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}
